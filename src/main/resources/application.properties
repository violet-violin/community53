# ServerProperties
server.port=8080
server.servlet.context-path=/community53

# ThymeleafProperties配置类里有相关属性；关闭thymeleaf模板缓存
spring.thymeleaf.cache=false

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community53?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=yamalaka
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
# classpath就是类路径，即指编译后的target.classes文件夹；这个是配置xml文件的路径
mybatis.mapper-locations=classpath:mapper/*.xml
# mybatis封装的对象所在包
mybatis.type-aliases-package=com.ly.community53.entity 
# 使用自动生成id的机制
mybatis.configuration.useGeneratedKeys=true
# header_url   headerUrl    下划线、驼峰命名自动匹配
mybatis.configuration.mapUnderscoreToCamelCase=true

#logger
#logging.level.com.ly.community53=debug
#logging.file.name=d:/temp/community.log

# MailProperties
spring.mail.host=smtp.163.com
spring.mail.port=465
spring.mail.username=15871793435@163.com
spring.mail.password=liyong20150513
# 指定协议，smtps，安全的smtp
spring.mail.protocol=smtps
#发邮件时，使用ssl
spring.mail.properties.mail.smtp.ssl.enable=true

# community53 上传头像的配置
community53.path.domain=http://localhost:8080
community53.path.upload=D:/workspace_idea1/community53_upload

# RedisProperties
#选择redis16个库，用哪个
spring.redis.database=11 
#用到本机，Windows的redis
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
# 配置服务器，只有一个
spring.kafka.bootstrap-servers=localhost:9092  
# 配置消费者分组的id，Kafka配置文件consumer.properties里有，
# 这里记得Kafka的consumer.properties文件的group-id要改成与下相同
spring.kafka.consumer.group-id=community53-consumer-group
# 是否自动提交消费者的偏移量，偏移量是否要记录下来
spring.kafka.consumer.enable-auto-commit=true 
# 自动提交的频率，3000ms
spring.kafka.consumer.auto-commit-interval=3000


# ElasticsearchProperties       这两句配置不支持了
#spring.data.elasticsearch.cluster-name=community53
##9200是http端口，9300是TCP端口，两者都是默认启用的
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

# 先是connection refused no further information；然后突然又可以了？？？
elasticSearch.url=127.0.0.1:9200
#直接用简单暴力方法解决  connection refused no further information
#直接就是不去检查  （这种还是不推荐的）
#management.health.elasticsearch.enabled=false



# TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
# id自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 集群方式
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

# wk
wk.image.command=D:/develop/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=d:/data/wk-images


# qiniu
qiniu.key.access=2XbBOTnnIBc03BFrnBplEqu-Xy-aXGBTjj5nJ5sc
qiniu.key.secret=3uwB8Rbxa5Tl2jmPChLlBtdqgFIXIKtGFDKU9NcP
qiniu.bucket.header.name=community53-header
        # 临时域名，只能抗30天
quniu.bucket.header.url=http://qn4qh8sv7.hn-bkt.clouddn.com
qiniu.bucket.share.name=community53-share
qiniu.bucket.share.url=http://qn4qpltjn.hn-bkt.clouddn.com


# caffeine
# 缓存15个数据，就是缓存15页的帖子
caffeine.posts.max-size=15
# 过期时间3min，本地缓存只保持3min；
caffeine.posts.expire-seconds=180


# actuator
# 暴露所有的端点，有20几个
management.endpoints.web.exposure.include=*
# 禁用个别几个端点
management.endpoints.web.exposure.exclude=info,caches


